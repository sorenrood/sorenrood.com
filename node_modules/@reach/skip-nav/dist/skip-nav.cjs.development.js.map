{"version":3,"file":"skip-nav.cjs.development.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { checkStyles } from \"@reach/utils\";\n\n// The user may want to provide their own ID (maybe there are multiple nav\n// menus on a page a use might want to skip at various points in tabbing?).\nlet defaultId = \"reach-skip-nav\";\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * SkipNavLink\n *\n * Renders a link that remains hidden until focused to skip to the main content.\n *\n * @see Docs https://reach.tech/skip-nav#skipnavlink\n */\nexport const SkipNavLink: React.FC<SkipNavLinkProps> = ({\n  children = \"Skip to content\",\n  contentId,\n  ...props\n}) => {\n  let id = contentId || defaultId;\n  useEffect(() => checkStyles(\"skip-nav\"), []);\n  return (\n    <a\n      {...props}\n      href={`#${id}`}\n      // TODO: Remove in 1.0 (kept for back compat)\n      data-reach-skip-link=\"\"\n      data-reach-skip-nav-link=\"\"\n    >\n      {children}\n    </a>\n  );\n};\n\n/**\n * @see Docs https://reach.tech/skip-nav#skipnavlink-props\n */\nexport type SkipNavLinkProps = {\n  /**\n   * Allows you to change the text for your preferred phrase or localization.\n   *\n   * @see Docs https://reach.tech/skip-nav#skipnavlink-children\n   */\n  children?: React.ReactNode;\n  /**\n   * An alternative ID for `SkipNavContent`. If used, the same value must be\n   * provided to the `id` prop in `SkipNavContent`.\n   *\n   * @see Docs https://reach.tech/skip-nav#skipnavlink-contentid\n   */\n  contentId?: string;\n} & Omit<React.HTMLAttributes<HTMLAnchorElement>, \"href\">;\n\nif (__DEV__) {\n  SkipNavLink.displayName = \"SkipNavLink\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * SkipNavContent\n *\n * Renders a div as the target for the link.\n *\n * @see Docs https://reach.tech/skip-nav#skipnavcontent\n */\nexport const SkipNavContent: React.FC<SkipNavContentProps> = ({\n  id: idProp,\n  ...props\n}) => {\n  let id = idProp || defaultId;\n  return <div {...props} id={id} data-reach-skip-nav-content=\"\" />;\n};\n\n/**\n * @see Docs https://reach.tech/skip-nav#skipnavcontent-props\n */\nexport type SkipNavContentProps = {\n  /**\n   * You can place the `SkipNavContent` element as a sibling to your main\n   * content or as a wrapper.\n   *\n   * Keep in mind it renders a `div`, so it may mess with your CSS depending on\n   * where itâ€™s placed.\n   *\n   * @example\n   *   <SkipNavContent />\n   *   <YourMainContent />\n   *   // vs.\n   *   <SkipNavContent>\n   *     <YourMainContent/>\n   *   </SkipNavContent>\n   *\n   * @see Docs https://reach.tech/skip-nav#skipnavcontent-children\n   */\n  children?: React.ReactNode;\n  /**\n   * An alternative ID. If used, the same value must be provided to the\n   * `contentId` prop in `SkipNavLink`.\n   *\n   * @see Docs https://reach.tech/skip-nav#skipnavcontent-id\n   */\n  id?: string;\n} & Omit<React.HTMLAttributes<HTMLDivElement>, \"id\">;\n\nif (__DEV__) {\n  SkipNavContent.displayName = \"SkipNavContent\";\n}\n"],"names":["defaultId","SkipNavLink","children","contentId","props","id","useEffect","checkStyles","React","href","displayName","SkipNavContent","idProp"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;AACA,IAAIA,SAAS,GAAG,gBAAhB;;AAIA;;;;;;;;IAOaC,WAAW,GAA+B,SAA1CA,WAA0C;2BACrDC;MAAAA,sCAAW;MACXC,iBAAAA;MACGC;;AAEH,MAAIC,EAAE,GAAGF,SAAS,IAAIH,SAAtB;AACAM,EAAAA,eAAS,CAAC;AAAA,WAAMC,iBAAW,CAAC,UAAD,CAAjB;AAAA,GAAD,EAAgC,EAAhC,CAAT;AACA,SACEC,uCAAA,IAAA,oBACMJ;AACJK,IAAAA,IAAI,QAAMJ;4BAEW;gCACI;IAL3B,EAOGH,QAPH,CADF;AAWD;;AAqBY;AACXD,EAAAA,WAAW,CAACS,WAAZ,GAA0B,aAA1B;AACD;;AAID;;;;;;;;;IAOaC,cAAc,GAAkC,SAAhDA,cAAgD;MACvDC,eAAJP;MACGD;;AAEH,MAAIC,EAAE,GAAGO,MAAM,IAAIZ,SAAnB;AACA,SAAOQ,uCAAA,MAAA,oBAASJ;AAAOC,IAAAA,EAAE,EAAEA;mCAAgC;IAApD,CAAP;AACD;;AAiCY;AACXM,EAAAA,cAAc,CAACD,WAAf,GAA6B,gBAA7B;AACD;;;;;"}